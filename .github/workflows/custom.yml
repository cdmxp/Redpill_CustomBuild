#
# Copyright (C) 2022 Ing <https://github.com/wjz304>
# 
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#


name: Custom Redpill
on:
  issues:
    types: [opened, reopened]
  workflow_dispatch:
    inputs:
      platform:
        description: '请选择你需要编译的型号'
        required: true
        default: 'DS3622xs+' 
        type: choice
        options:
        - DS3615xs
        - DS3617xs
        - DS918+
        - DS920+
        - DS3622xs+

      version:
        description: '请选择你需要编译的版本'
        required: true
        default: '7.1.0-42661' 
        type: choice
        options:
        - 7.1.1-42951
        - 7.1.0-42661
        - 7.0.1-42218
        - 6.2.4-25556
        
      map: 
        description: '请输入控制器盘数(SataPortMap)和盘序(DiskIdxMap)两个字段, 并以","间隔. eg: 0, 10'
        required: false
        default: ''
        type: string

      dtb:
        description: '【仅DS920+】请输入 dtb 文件的下载链接. (支持的文件类型: .dts、.dtb、.tar.gz、.zip)'
        required: false
        default: ''
        type: string

      sn: 
        description: '请输入序列号. 默认根据型号随机生成. eg: 1980PDN002189'
        required: false
        default: ''
        type: string

      mac: 
        description: '请输入MAC地址, 多个请以","间隔. 默认根据型号随机生成. eg: 001132888A95, 001132888A96'
        required: false
        default: ''
        type: string

      usb: 
        description: '请输入设备识别码(pid)和供应商ID(vid)两个字段, 并以","间隔. eg: 0xa4a5, 0x0525'
        required: false
        default: '0x0001, 0x46f4'
        type: string

      ext: 
        description: '请输入扩展驱动, 多个请以 "," 间隔（请酌情添加，太多起不来）. eg: r8125, tg3'
        required: false
        default: ''
        type: string

      exp:
        description: '请选择编译依赖的基础库. (7.1 优先选 pocopico, 7.0/jun 优先选 jumkey.)'
        required: true
        default: 'pocopico' 
        type: choice
        options:
        - 'pocopico'
        - 'jumkey'

      jun:
        description: '请选择是否jun模式编译. (仅7.0.1-42218 版本可选, jun模式 支持 7.0.1~7.1.1 的 DSM.)'
        required: true
        default: '0' 
        type: choice
        options:
        - '0'
        - '1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Checkout
        uses: actions/checkout@main

      - name: Init Env
        run : |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"

          python -m pip install --upgrade pip setuptools

      - name: Get Issues Info
        if: github.event_name == 'issues'
        id: get-issues
        uses: actions/github-script@v6
        with:
          script: |
            var issuenumber = ${{ toJSON(github.event.issue.number) }};
            var issueauth = ${{ toJSON(github.event.issue.user.login) }};
            var issuetitle = ${{ toJSON(github.event.issue.title) }};
            var issuebody = ${{ toJSON(github.event.issue.body) }};

            var regex = /\`\`\`([\s\S]*?)\`\`\`/g;
            let options = issuebody.match(regex);
            if (options != null && options.length > 0) {
              var fs = require('fs'); // 引入fs模块
              fs.writeFileSync('customshell.sh', options[options.length-1].replace(/\`|\r/g, ""), { 'flag': 'w' }, (err) => { if (err) throw err; });
              for(option in options) {
                console.log(options[option]);
                issuebody = issuebody.replace(options[option], "");
              }
            }

            // '<???>': 替换一次; '/<???>/g': 替换全局; '/<???>/gi': 替换全局并忽略大小写; 
            issuetitle = issuetitle.replace(/\u000A/g, "");  // \n 换行符
            issuetitle = issuetitle.replace(/\u000D/g, "");  // \r 回车

            issuebody = issuebody.replace(/\u0008/g, "");  // \b Backspace
            issuebody = issuebody.replace(/\u0009/g, "");  // \t Tab
            issuebody = issuebody.replace(/\u000A/g, "");  // \n 换行符
            issuebody = issuebody.replace(/\u000B/g, "");  // \v 垂直制表符
            issuebody = issuebody.replace(/\u000C/g, "");  // \f 换页
            issuebody = issuebody.replace(/\u000D/g, "");  // \r 回车
            //issuebody = issuebody.replace(/\u0022/g, "");  // \" 双引号 (")
            //issuebody = issuebody.replace(/\u0027/g, "");  // \' 单引号 (')
            //issuebody = issuebody.replace(/\u005C/g, "");  // \\ 反斜杠 (\)
            issuebody = issuebody.replace(/\u00A0/g, "");  //    不间断空格
            issuebody = issuebody.replace(/\u2028/g, "");  //    行分隔符
            issuebody = issuebody.replace(/\u2029/g, "");  //    段落分隔符
            issuebody = issuebody.replace(/\uFEFF/g, "");  //    字节顺序标记

            // 容错
            issuebody = issuebody.replace(/：/g, ": ");
            issuebody = issuebody.replace(/，/g, ", ");
            issuebody = issuebody.replace(/“/g, "\"");
            issuebody = issuebody.replace(/”/g, "\"");

            core.setOutput("issuenumber", JSON.stringify(issuenumber));
            core.setOutput("issueauth", JSON.stringify(issueauth));
            core.setOutput("issuetitle", JSON.stringify(issuetitle));
            core.setOutput("issuebody", JSON.stringify(issuebody));

      - name: Set Issues Info
        if: github.event_name == 'issues' && success()
        run: |
          echo issuenumber: "${{ steps.get-issues.outputs.issuenumber }}"
          echo issueauth:   "${{ steps.get-issues.outputs.issueauth }}"
          echo issuetitle:  "${{ steps.get-issues.outputs.issuetitle }}"
          echo issuebody:   "${{ steps.get-issues.outputs.issuebody }}"

          echo "issuenumber="${{ steps.get-issues.outputs.issuenumber }}"" >> $GITHUB_ENV
          echo "issueauth="${{ steps.get-issues.outputs.issueauth }}"" >> $GITHUB_ENV
          echo "issuetitle="${{ steps.get-issues.outputs.issuetitle }}"" >> $GITHUB_ENV
          echo "issuebody="${{ steps.get-issues.outputs.issuebody }}"" >> $GITHUB_ENV

          if [ -f 'customshell.sh' ]; then
            echo "customshell.sh"
            cat customshell.sh
          fi

      - name: Get Build Info
        uses: jannekem/run-python-script-action@v1.2
        id: info
        with:
          script: |
            import os, re, json, shutil, string, subprocess

            if __name__ == '__main__':

                issues = 'false'
                iscustom = 'true'
                errinfo = ''

                platform = 'DS3622xs+'
                version = '7.1.0-42661'
                config = ''
                map = ''
                dtb = ''
                sn = ''
                mac = ''
                usb = ''
                ext = ''
                exp = 'pocopico'
                jun = '0'
                dev = '0'

                if '${{ github.event_name }}' == 'issues':
                    if '${{ env.issuetitle }}'.lower().startswith('custom'):
                        issues = 'true'

                        body = {}
                        try:
                            body = json.loads('${{ env.issuebody }}')
                            if len(body) == 0:
                                iscustom = 'false'
                                errinfo = 'body 错误, body is null'
                            else:
                                # l = lambda x: x.strip() if isinstance(x, str) else str(x)
                                if 'platform' in body: platform = body['platform'].strip()
                                if 'version' in body: version = body['version'].strip()
                                if 'config' in body: config = body['config'] #l(body['config']).strip()
                                if 'map' in body: map = body['map'].strip()
                                if 'dtb' in body: dtb = body['dtb'].strip()
                                if 'sn' in body: sn = body['sn'].strip()
                                if 'mac' in body: mac = body['mac'].strip()
                                if 'usb' in body: usb = body['usb'].strip()
                                if 'ext' in body: ext = body['ext'].strip()
                                if 'exp' in body: exp = body['exp'].strip()
                                if 'jun' in body: jun = body['jun'].strip()
                                if 'dev' in body: dev = body['dev'].strip()
                        except Exception as e:
                            iscustom = 'false'
                            errinfo = 'body 错误, 不符合JSON规范 {}.'.format(e)
                    else:
                        iscustom = 'false'
                else:
                    platform = '${{ inputs.platform }}'.strip()
                    version = '${{ inputs.version }}'.strip()
                    # config = '${{ inputs.config }}'.strip()   # Actions 限制10个参数
                    map = '${{ inputs.map }}'.strip()
                    dtb = '${{ inputs.dtb }}'.strip()
                    sn = '${{ inputs.sn }}'.strip()
                    mac = '${{ inputs.mac }}'.strip()
                    usb = '${{ inputs.usb }}'.strip()
                    ext = '${{ inputs.ext }}'.strip()
                    exp = '${{ inputs.exp }}'.strip()
                    jun = '${{ inputs.jun }}'.strip()
                    # dev = '${{ inputs.dev }}'.strip()         # Actions 限制10个参数

                if not platform in ['DS3615xs', 'DS3617xs', 'DS918+', 'DS920+', 'DS3622xs+']:
                    iscustom = 'false'
                    errinfo = 'platform 参数错误, 当前仅支持 DS3615xs, DS3617xs, DS918+, DS920+, DS3622xs+ .'

                if not version in ['7.1.1-42951', '7.1.0-42661', '7.0.1-42218', '6.2.4-25556']:
                    iscustom = 'false'
                    errinfo = 'version 参数错误, 当前仅支持 7.1.1-42951, 7.1.0-42661, 7.0.1-42218, 6.2.4-25556 .'

                if config != '':
                    try:
                        config = json.dumps(config)
                        json.loads(config)
                    except Exception as e:
                        iscustom = 'false'
                        errinfo = 'config 参数错误, 不符合JSON规范 {}.'.format(e)

                if map != '':
                    maps = [x.strip() for x in re.split(',| |\|', map) if x.strip() != '']
                    if len(maps) == 2 and maps[0].isdigit() and all(c in string.hexdigits for c in maps[1]) and len(maps[1]) == 2 * len(maps[0]):
                        map = ','.join(maps)
                    else:
                        iscustom = 'false'
                        errinfo = 'map 参数错误, 请填写控制器盘数(SataPortMap)和盘序(DiskIdxMap)两个字段(DiskIdxMap 的位数应该是 SataPortMap 的2倍), 并以","间隔. 比如: "0,10".'

                if dtb != '':
                    url = dtb
                    try:
                        try:
                            import wget, filetype
                        except ModuleNotFoundError:
                            os.system('pip3 install wget filetype')
                            import wget, filetype
                    
                        res = wget.download(url)
                        if res:
                            down = res
                            kind = filetype.guess(down)
                            name = 'user'
                            if os.path.exists('extract'):  
                                shutil.rmtree('extract')
                            if kind != None and kind.extension == 'zip':
                                import zipfile
                                z = zipfile.ZipFile(down, 'r')
                                z.extractall('extract')
                            if kind != None and kind.extension in ['tar', 'gz']:
                                import tarfile
                                z = tarfile.open(down) 
                                z.extractall('extract')
                            if os.path.exists('extract'):
                                isfind = False
                                for root, dirs, files in os.walk('extract'):
                                    for file in files:
                                        if file.endswith('.dts') or file.endswith('.dtb'):
                                            isfind = True
                                            down = name + os.path.splitext(file)[-1]
                                            shutil.move(os.path.join(root, file), down)
                                            break
                                    if isfind is True:
                                        break

                            if os.path.exists(down) and (down.endswith('dts') or down.endswith('dtb')):
                                if down.endswith('dts'):
                                    wget.download('https://raw.githubusercontent.com/pocopico/rp-ext/main/redpill-dtb-static/releases/dtc')
                                    if os.path.exists('dtc'):
                                        print('./dtc -q -I dts -O dtb {} >{}.dtb'.format(down, name))
                                        os.system('sudo chmod a+x dtc')
                                        # os.system('sudo ./dtc -q -I dts -O dtb {} >{}.dtb'.format(down, name))
                                        p = subprocess.Popen('sudo ./dtc -q -I dts -O dtb {} >{}.dtb'.format(down, name), shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
                                        errinfo = p.stderr.read().decode('utf-8')
                                        if os.path.exists('{}.dtb'.format(name)) and os.path.getsize('{}.dtb'.format(name)) > 0:
                                            print('dtc ok ...')
                                            dtb = os.path.abspath('{}.dtb'.format(name))
                                        else:
                                            iscustom = 'false'
                                            errinfo = 'dtb 参数错误, dts文件内容存在错误 <{}>.'.format(errinfo.replace('\r', '').replace('\n', ' '))
                                    else:
                                        iscustom = 'false'
                                        errinfo = 'dtb 参数错误, 下载 dtc(dts->dtb tools) 失败, 可能是服务器压力过大, 请稍后重试, 或者直接使用 dtb 文件跳过转换.'
                                else:
                                    dtb = os.path.abspath(down)
                            else:
                                iscustom = 'false'
                                errinfo = 'dtb 参数错误, 该url下载的文件不是所支持的格式.'
                    except ValueError as e:
                        iscustom = 'false'
                        errinfo = 'dtb 参数错误, {}, 请填写 dts/dtb 文件有效的 http(s) 下载链接.'.format(e)
                    except Exception as e:
                        iscustom = 'false'
                        errinfo = 'dtb 参数错误, {}, 请稍后重试.'.format(e)

                if sn != '' and not sn.isalnum():
                    iscustom = 'false'
                    errinfo = 'sn 参数错误.'

                if mac != '':
                    macs = [x.strip() for x in re.split(',| |\|', mac) if x.strip() != '']
                    if len(macs) > 0 or len(macs) <= 8:
                        mac = ','.join(macs)
                    else:
                        iscustom = 'false'
                        errinfo = 'mac 参数错误.'

                if usb != '':
                    usbs = [x.strip() for x in re.split(',| |\|', usb) if x.strip() != '']
                    if len(usbs) == 2 \
                    and len(usbs[0]) == 6 and usbs[0].lower().startswith('0x') and all(c in string.hexdigits for c in usbs[0][2:]) \
                    and len(usbs[1]) == 6 and usbs[1].lower().startswith('0x') and all(c in string.hexdigits for c in usbs[1][2:]):
                        usb = ','.join(usbs)
                    else:
                        iscustom = 'false'
                        errinfo = 'usb 参数错误, 请填写设备识别码(pid)和供应商ID(vid)两个字段的值, 并以","间隔. eg: 0xa4a5, 0x0525'

                if ext != '':
                    rpKey = platform.replace('+', 'p').lower() + '_' + version.split('-')[-1]
                    rpExts = []
                    if dev == '1':
                        extsfile = 'exts_dev.json'
                    else:
                        extsfile = 'exts.json'
                    with open(extsfile, mode="r") as f:
                        extsjson = json.loads(f.read())
                        if rpKey in extsjson:
                            rpExts = extsjson[rpKey]
                    extpocs = [x.strip() for x in re.split(',| |\|', ext) if x.strip() != '' and not x.strip().startswith('http')]
                    ext3rds = [x.strip() for x in re.split(',| |\|', ext) if x.strip() != '' and x.strip().startswith('http')]
                    ext = ''
                    if len(extpocs) > 0 and not set(extpocs) <= set(rpExts):
                        iscustom = 'false'
                        if len(rpExts) > 0:
                            errinfo = 'ext 参数错误, 请填写[exts.json](https://github.com/wjz304/Redpill_CustomBuild/blob/main/exts.json)中存在的名称(no *).'
                        else:
                            errinfo = 'ext 参数错误, 该模式不存在 {} 对应的驱动, 请尝试切换模式或者使用 http(s) 链接驱动.'.format(rpKey)      
                    else:
                        if len(extpocs) > 0:
                            ext += ','.join(extpocs)
                        if len(ext3rds) > 0:
                            if ext != '':
                                ext += ','
                            ext += ','.join(ext3rds)
                        if ext == '':
                            iscustom = 'false'
                            errinfo = 'ext 参数错误. 请填写有效的 http(s) 链接.'

                if not exp in ['pocopico', 'jumkey']:
                    iscustom = 'false'
                    errinfo = 'exp 参数错误, 当前仅支持 pocopico, jumkey.'

                if not jun in ['0', '1']:
                    iscustom = 'false'
                    errinfo = 'jun 参数错误, 当前仅支持 "0", "1".'

                if not dev in ['0', '1']:
                    dev = '0'

                set_output('issues', issues)
                set_output('iscustom', iscustom)
                set_output('errinfo', errinfo)

                set_output('platform', platform)
                set_output('version', version)
                set_output('config', config)
                set_output('map', map)
                set_output('dtb', dtb)
                set_output('sn', sn)
                set_output('mac', mac)
                set_output('usb', usb)
                set_output('ext', ext)
                set_output('exp', exp)
                set_output('jun', jun)
                set_output('dev', dev)

      - name: Echo Build Info
        run: |
          echo issues:    "${{ steps.info.outputs.issues }}"
          echo iscustom:  "${{ steps.info.outputs.iscustom }}"
          echo errinfo:   "${{ steps.info.outputs.errinfo }}"
          echo platform:  "${{ steps.info.outputs.platform }}"
          echo version:   "${{ steps.info.outputs.version }}"
          echo config:    "${{ steps.info.outputs.config }}"
          echo map:       "${{ steps.info.outputs.map }}"
          echo dtb:       "${{ steps.info.outputs.dtb }}"
          echo sn:        "${{ steps.info.outputs.sn }}"
          echo mac:       "${{ steps.info.outputs.mac }}"
          echo usb:       "${{ steps.info.outputs.usb }}"
          echo ext:       "${{ steps.info.outputs.ext }}"
          echo exp:       "${{ steps.info.outputs.exp }}"
          echo jun:       "${{ steps.info.outputs.jun }}"
          echo dev:        "${{ steps.info.outputs.dev }}"

      - name: Add Issues labels
        if: steps.info.outputs.issues == 'true' && steps.info.outputs.iscustom == 'true'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'add-labels'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.issuenumber }}
          labels: 'custom'

      - name: Create Issues comment
        if: steps.info.outputs.issues == 'true' && steps.info.outputs.iscustom == 'true'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.issuenumber }}
          body: |
            ${{ env.issueauth }} 您好.  
            您自定义的 Redpill 已开始构建。请前往下面的 URL 查看详细信息。  
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  
            ----
          emoji: heart

      - name: Create Issues comment
        if: steps.info.outputs.issues == 'true' && steps.info.outputs.iscustom == 'false'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.issuenumber }}
          body: |
            ${{ env.issueauth }} 您好.  
            您自定义 Redpill 所填写的信息有误,无法触发编译, 请参考模板和错误提示对body进行修改并请重新触发编译(Close & Reopen).    
            `Error Info:`  
            `${{ steps.info.outputs.errinfo }}`  
            >
            ----
          emoji: confused

      - name: Create Config File
        if: steps.info.outputs.iscustom == 'true'
        uses: jannekem/run-python-script-action@v1.2
        with:
          script: |
            import os, json

            if __name__ == '__main__':
                config = {
                    "extra_cmdline": {
                        "pid": "0x0001",
                        "vid": "0x46f4",
                        "sn": "2150SQRW1ZAHH",
                        "mac1": "001132FA6CD3"
                    },
                    "synoinfo": {
                        "internalportcfg": "0xffff",
                        "maxlanport": "7"
                    },
                    "ramdisk_copy": {}
                }

                dat = []
                if '${{ steps.info.outputs.sn }}' == '' or '${{ steps.info.outputs.mac }}' == '':
                    try:
                        import wget
                    except ModuleNotFoundError:
                        os.system('pip3 install wget')
                        import wget
                    res = wget.download('https://raw.githubusercontent.com/pocopico/tinycore-redpill/main/serialnumbergen.sh', out='serialnumbergen.sh')
                    os.system('sed -i "s|DS3622xsp|DS3622xs+|g" serialnumbergen.sh')
                    os.system('sed -i "s|echo.*\$(generateMacAddress)|echo \$(generateMacAddress)|g" serialnumbergen.sh')
                    os.system('sed -i "s|echo.*\$(generateSerial \$1)|echo \$(generateSerial \$1)|g" serialnumbergen.sh')
                    dat = os.popen('bash ./serialnumbergen.sh ${{ steps.info.outputs.platform }}').readlines()

                if '${{ steps.info.outputs.config }}' != '':
                    inconfig = json.loads('${{ steps.info.outputs.config }}')
                    config.update(inconfig)

                if "extra_cmdline" in config:
                    if '${{ steps.info.outputs.sn }}' != '':
                        config["extra_cmdline"]["sn"] = '${{ steps.info.outputs.sn }}'
                    elif len(dat) == 2:
                        config["extra_cmdline"]["sn"] = dat[1].strip()

                    if '${{ steps.info.outputs.mac }}' != '':
                        macs = '${{ steps.info.outputs.mac }}'.split(',')
                        for index, item in enumerate(macs):
                            config["extra_cmdline"]["mac{}".format(index+1)] = item.replace(':', '').upper()
                        config["extra_cmdline"]["netif_num"] = len(macs)
                    elif len(dat) == 2:
                        config["extra_cmdline"]["mac1"] = dat[0].strip().replace(':', '')
                        config["extra_cmdline"]["mac2"] = hex(int(dat[0].strip().replace(':', ''), 16) + 1)[2:].rjust(12,'0').upper()
                        config["extra_cmdline"]["netif_num"] = 2

                    if '${{ steps.info.outputs.map }}' != '':
                        maps = '${{ steps.info.outputs.map }}'.split(',')
                        if len(maps) == 2:
                            config["extra_cmdline"]["SataPortMap"] = maps[0]
                            config["extra_cmdline"]["DiskIdxMap"] = maps[1]

                    if '${{ steps.info.outputs.usb }}' != '':
                        usbs = '${{ steps.info.outputs.usb }}'.split(',')
                        if len(usbs) == 2:
                            config["extra_cmdline"]["pid"] = usbs[0]
                            config["extra_cmdline"]["vid"] = usbs[1]

                print(json.dumps(config, indent=4))

                with open('user_config.json', 'w', encoding="utf-8") as f:
                    f.write(json.dumps(config, indent=4))
                  
      - name: Run Build
        if: steps.info.outputs.iscustom == 'true' && success()
        run: |
          function exdsmpat() {
            pwd
            cd ./cache
            path=7.0.1/42218
            if [ "$2" == "42661" ]; then
              path=7.1/42661-1
            fi
            if [ "$2" == "42951" ]; then
              path=7.1.1/42951
            fi
            curl -L https://cndl.synology.cn/download/DSM/release/${path}/DSM_$1_$2.pat -o ds.pat
            curl -L https://cndl.synology.cn/download/DSM/release/7.0.1/42218/DSM_$1_42218.pat -o oldpat.tar.gz
            mkdir synoesp && tar -C./synoesp/ -xf oldpat.tar.gz rd.gz
            cd synoesp
            xz -dc < rd.gz >rd 2>/dev/null || echo "extract rd.gz"
            cpio -idm <rd 2>&1 || echo "extract rd"
            mkdir extract
            cp ./usr/lib/libcurl.so.4 ./usr/lib/libmbedcrypto.so.5 ./usr/lib/libmbedtls.so.13 ./usr/lib/libmbedx509.so.1 ./usr/lib/libmsgpackc.so.2 ./usr/lib/libsodium.so ./usr/lib/libsynocodesign-ng-virtual-junior-wins.so.7 ./usr/syno/bin/scemd ./extract/
            cd extract && ln -s scemd syno_extract_system_patch && cd ..
            cd ..
            mkdir pat
            sudo LD_LIBRARY_PATH=synoesp/extract synoesp/extract/syno_extract_system_patch ds.pat pat || echo "extract latest pat"
            tar -czvf $3 -C ./pat/ . --warning=no-file-changed
            ls -al
            sha256zImage=$(sha256sum ./pat/zImage | awk '{print $1}')
            sha256ramdisk=$(sha256sum ./pat/rd.gz | awk '{print $1}')
            echo sha256zImage: ${sha256zImage} sha256ramdisk: ${sha256ramdisk}
            sudo rm -rf ds.pat oldpat.tar.gz synoesp pat
            ls -al
            sha256newpat=$(sha256sum $3 | awk '{print $1}')
            echo sha256newpat: ${sha256newpat}
            cd ..
            pwd
          }

          function setsynoarch() {
            case $1 in
            DS3615xs)
                synoarch=bromolow
                ;;
            DS3617xs)
                synoarch=broadwell
                ;;
            DS916+)
                synoarch=braswell
                ;;
            DS918+)
                synoarch=apollolake
                ;;
            DS920+)
                synoarch=geminilake
                ;;
            DS3622xs+)
                synoarch=broadwellnk
                ;;
            DS1621+)
                synoarch=v1000
                ;;
            FS6400)
                synoarch=purley
                ;;
            DVA3219)
                synoarch=denverton
                ;;
            DVA3221)
                synoarch=denverton
                ;;
            esac
          }

          sudo apt update
          sudo apt upgrade -y
          sudo apt install curl bspatch jq git -y

          # 开始表演
          echo "============================编译开始============================"
          repo=${{ steps.info.outputs.exp }}
          branch=develop
          bArgs=''
          if [ ${{ steps.info.outputs.jun }} == '1' ]; then 
            bArgs='BRP_JUN_MOD=1 BRP_DEBUG=1'
            if [ ${repo} == 'pocopico' ]; then 
              branch=jun
            fi
          fi
          rpext=https://raw.githubusercontent.com/pocopico/rp-ext/master
          loadext=https://raw.githubusercontent.com/pocopico/redpill-load/develop
          if [ ${{ steps.info.outputs.dev }} == '1' ]; then 
            rpext=https://raw.githubusercontent.com/wjz304/rp-ext/master
            loadext=https://raw.githubusercontent.com/wjz304/rp-ext/master
          fi

          git clone -b ${branch} https://github.com/${repo}/redpill-load redpill-load

          cp user_config.json redpill-load/user_config.json

          cd redpill-load
          platform=${{ steps.info.outputs.platform }}
          version=${{ steps.info.outputs.version }}
          synoplatform=$(echo ${platform} | sed 's/DS/ds/g; s/+/p/g')       # DS3622xs+ => ds3622xsp
          synoversion=$(echo ${version} | awk -F - '{print $2}')            # 7.0.1-42218 => 42218
          setsynoarch ${platform}

          # 7.1 解密PAT
          echo "===========================7.1 解密PAT=========================="
          if [[ "${version}" > "7.0.1-42218" ]]; then 
            newpat=${synoplatform}_${synoversion}.pat
            exdsmpat ${platform} ${synoversion} ${newpat}
            ls -al ./cache
            configfile=./config/${platform}/${version}/config.json
            jq -r .os.sha256 ${configfile}
            sed -i "s/$(jq -r .os.sha256 ${configfile})/$(sha256sum ./cache/${newpat} | awk '{print $1}')/g" ${configfile}
            jq -r .os.sha256 ${configfile}
          fi

          # 添加必备驱动
          echo "===========================添加必备驱动=========================="
          echo -e '{\n    "thethorgroup.boot-wait": "https://raw.githubusercontent.com/wjz304/rp-ext/master/redpill-boot-wait/rpext-index.json"\n}' > bundled-exts.json
          #./ext-manager.sh add ${loadext}/redpill-boot-wait/rpext-index.json
          ./ext-manager.sh add ${loadext}/redpill-acpid/rpext-index.json
          ./ext-manager.sh add ${loadext}/redpill-misc/rpext-index.json
          ./ext-manager.sh add ${loadext}/redpill-virtio/rpext-index.json

          # redpill.ko 方式一 
          echo "=======================Download redpill.ko======================"
          extension=$(curl -s --location "${rpext}/redpill/rpext-index.json")
          redpilltgz=$(curl -s --location "$(echo ${extension} | jq -r .releases.${synoplatform}_${synoversion})" | jq -r '.files[] .url')
          [ "$(echo $redpilltgz | awk '{print $NF}')" != "$redpilltgz" ] && redpilltgz=$(echo $redpilltgz | awk '{print $1}')
          wget ${redpilltgz}
          tar zxvf $(echo ${redpilltgz} | awk -F / '{print $NF}') -C ./ 
          mv ./redpill.ko ./ext/rp-lkm/redpill-linux-v$(modinfo --field=vermagic redpill.ko | awk '{print $1}').ko

          # # redpill.ko 方式二 
          # echo "========================Build redpill.ko========================"
          # toolkittxz=ds.${synoarch}-${version::3}.dev.txz
          # toolkitdir=usr/local/x86_64-pc-linux-gnu/x86_64-pc-linux-gnu/sys-root/usr/lib/modules/DSM-${version::3}/build
          # curl --location "https://global.download.synology.com/download/ToolChain/toolkit/${version::3}/${synoarch}/${toolkittxz}" --output ${toolkittxz}
          # mkdir ${synoarch} && tar -C./${synoarch}/ -xf ${toolkittxz} ${toolkitdir}
          # git clone -b master --depth=1 https://github.com/${repo}/redpill-lkm.git
          # cd redpill-lkm
          # # sed -i 's/   -std=gnu89/   -std=gnu89 -fno-pie/' ../${synoarch}/${toolkitdir}/Makefile
          # make LINUX_SRC=../${synoarch}/${toolkitdir} dev-v${version::1}
          # cp -fv ./redpill.ko ../ext/rp-lkm/redpill-linux-v$(modinfo --field=vermagic ./redpill.ko | awk '{print $1}').ko
          # cd ..

          if [ ${platform} == 'DS920+' ]; then
            echo "===========================DS920+ .dtb=========================="
            ./ext-manager.sh add ${rpext}/redpill-dtb-static/rpext-index.json
            ./ext-manager.sh _update_platform_exts ${synoplatform}_${synoversion} redpill-dtb-static

            if [ -n "${{ steps.info.outputs.dtb }}" ]; then
              dtbuserfile="${{ steps.info.outputs.dtb }}"
              dtbextfile="$(find custom -name model_${synoplatform}.dtb)"
              echo Copying ${dtbuserfile} to ${dtbextfile} ...
              sudo cp ${dtbuserfile} ${dtbextfile}
            fi
          fi

          # 添加扩展驱动
          echo "==========================添加扩展驱动==========================="
          if [ -n "${{ steps.info.outputs.ext }}" ]; then
            ext=${{ steps.info.outputs.ext }}
            exts=(${ext//,/ })
            for item in ${exts[@]}
            do
              if [[ ${item} = http* ]]; then
                ./ext-manager.sh add "${item}"
              else
                ./ext-manager.sh add "${rpext}/${item}/rpext-index.json"
              fi
            done
          fi

          #自定义操作
          if [ -f '../customshell.sh' ]; then
            if [ "${{ env.issueauth }}" == "$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')" ]; then
              echo "===========================自定义操作============================"
              cp ../customshell.sh customshell.sh
              chmod a+x customshell.sh
              source customshell.sh
            else
              echo "由于权限太高, 防止有些人执行非法操作, 仅仓库作者可操作, 请联系该仓库管理员或者fork到自己名下操作."
            fi
          fi

          # 编译
          echo "==============================编译=============================="
          # sed -i "s|#!/usr/bin/env bash|#!/usr/bin/env -S bash -x|g" ./build-loader.sh
          sudo ${bArgs} BRP_USER_CFG=user_config.json ./build-loader.sh "${platform}" "${version}"

          ls ./custom/extensions | grep -v txt > exts.txt
          ls -al ./custom/extensions

      - name: Generate release tag
        if: steps.info.outputs.iscustom == 'true' && success()
        id: tag
        run: |
          if [ ${{ steps.info.outputs.issues }} == 'true' ]; then
            echo "### ${{ env.issueauth }}'s Redpill Custom" >> $GITHUB_STEP_SUMMARY
            echo "👉 issues: [#${{ env.issuenumber }}]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/issues/${{ env.issuenumber }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "### $(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')'s Redpill Custom" >> $GITHUB_STEP_SUMMARY
            echo "👉 "platform": "${{ steps.info.outputs.platform }}"  " >> $GITHUB_STEP_SUMMARY
            echo "👉 "version": "${{ steps.info.outputs.version }}", "jun": "${{ steps.info.outputs.jun }}"  " >> $GITHUB_STEP_SUMMARY
            echo "👉 "ext": "${{ steps.info.outputs.ext }}"  " >> $GITHUB_STEP_SUMMARY
          fi

          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
          echo "::set-output name=repository_name::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')"

      - name: Upload to Artifacts
        if: steps.info.outputs.iscustom == 'true' && success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.tag.outputs.repository_name }}-Custom-${{ steps.tag.outputs.release_tag }}
          path: |
            redpill-load/exts.txt
            redpill-load/user_config.json
            redpill-load/images/*.img

      - name: Generate release tag
        if: steps.info.outputs.iscustom == 'false'
        run: |
          if [ ${{ steps.info.outputs.issues }} == 'true' ]; then
            echo "### ${{ env.issueauth }}'s Redpill Custom" >> $GITHUB_STEP_SUMMARY
          else
            echo "### $(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')'s Redpill Custom" >> $GITHUB_STEP_SUMMARY
          fi
          echo "😞 😔 😟 😕 🙁 ☹️ 😣 😖 😫 😩 🥺 😢  " >> $GITHUB_STEP_SUMMARY
          echo "您自定义 Redpill 所填写的信息有误,无法触发编译, 请参考模板和错误提示对body进行修改并请重新触发编译(Close & Reopen).  " >> $GITHUB_STEP_SUMMARY
          echo "`Error Info:`  " >> $GITHUB_STEP_SUMMARY
          echo "`${{ steps.info.outputs.errinfo }}`  " >> $GITHUB_STEP_SUMMARY

      - name: Create Issues Comment
        if: steps.info.outputs.issues == 'true' && steps.info.outputs.iscustom == 'true' && success()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.issuenumber }}
          body: |
            ${{ env.issueauth }} 您好.
            您自定义的 Redpill 已构建完成。请前往下面的 URL 下载。
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  
            ----
          emoji: hooray

      - name: Close Issues
        if: steps.info.outputs.issues == 'true' && steps.info.outputs.iscustom == 'true' && success()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.issuenumber }}

      - name: Create Issues Comment
        if: steps.info.outputs.issues == 'true' && steps.info.outputs.iscustom == 'true' && failure()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.issuenumber }}
          body: |
            ${{ env.issueauth }} 您好.
            您自定义的 Redpill 构建失败。请前往下面的 URL 查看详细信息。请自行关闭本 Issues 并在进行调整后重新创建一个 Issues 来发起重新构建。
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  
            ----
          emoji: confused

